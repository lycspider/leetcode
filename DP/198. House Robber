/*You are a professional robber planning to rob houses along a street. 
Each house has a certain amount of money stashed, the only constraint stopping you from robbing each of them is that adjacent houses have security system connected and it will automatically contact the police if two adjacent houses were broken into on the same night.
Given a list of non-negative integers representing the amount of money of each house, determine the maximum amount of money you can rob tonight without alerting the police.
经典DP问题
已知一条街道上住户可抢金额，强盗不能抢连续的两户，求能抢的最大金额
*/

/*
算法思路：
遍历的同时记录抢某一家与未抢某一家的最大金额
*/

/*
时间复杂度:O(n)
空间复杂度:O(1)
*/

class Solution {
public:
    int rob(vector<int>& nums) {
        if(nums.size()==0)return 0;
        if(nums.size()==1)return nums[0];
        int robLast=nums[0];
        int notRobLast=0;
        for(int i=1;i<nums.size();i++){
            int tmp=notRobLast;
            notRobLast=max(robLast,notRobLast);
            robLast=tmp+nums[i];
        }
        return max(notRobLast,robLast);
        
    }
};
